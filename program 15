/* 1. Write a MongoDB query to create a user “CUSTOMER1” and grant the read role in the INVOICE database.*/
> use INVOICE
switched to db INVOICE
INVOICE> 

INVOICE> db.createUser({
...   user: "CUSTOMER1",
...   pwd: passwordPrompt(), // or specify a password string like "securePassword123"
...   roles: [ { role: "read", db: "INVOICE" } ]
... })
Enter password
asdf1234
********{ ok: 1 }


/* 2. Write a MongoDB query (command-line utility) to create the backup for the INVOICE database.*/

(base) ksb@ksb-OptiPlex-3060:~$ mongodump --db INVOICE --out ./invoice_backup_clean
2025-05-12T14:22:47.758+0530	writing INVOICE.CUSTOMER to invoice_backup_clean/INVOICE/CUSTOMER.bson
2025-05-12T14:22:47.759+0530	writing INVOICE.product to invoice_backup_clean/INVOICE/product.bson
2025-05-12T14:22:47.837+0530	done dumping INVOICE.product (4 documents)
2025-05-12T14:22:47.854+0530	done dumping INVOICE.CUSTOMER (1 document)
2025-05-12T14:22:47.964+0530	writing INVOICE.customer to invoice_backup_clean/INVOICE/customer.bson
2025-05-12T14:22:47.965+0530	done dumping INVOICE.customer (4 documents)


/* 3. Write a MongoDB query (command-line utility) to restore
    a particular database or a collection. */
    
test> use INVOICE
switched to db INVOICE
INVOICE> db.dropDatabase()
{ ok: 1, dropped: 'INVOICE' }


(base) ksb@ksb-OptiPlex-3060:~$ mongorestore --db INVOICE --drop ./invoice_backup_clean/INVOICE
2025-05-12T14:23:36.778+0530	The --db and --collection flags are deprecated for this use-case; please use --nsInclude instead, i.e. with --nsInclude=${DATABASE}.${COLLECTION}
2025-05-12T14:23:36.778+0530	building a list of collections to restore from invoice_backup_clean/INVOICE dir
2025-05-12T14:23:36.778+0530	reading metadata for INVOICE.CUSTOMER from invoice_backup_clean/INVOICE/CUSTOMER.metadata.json
2025-05-12T14:23:36.778+0530	reading metadata for INVOICE.customer from invoice_backup_clean/INVOICE/customer.metadata.json
2025-05-12T14:23:36.778+0530	reading metadata for INVOICE.product from invoice_backup_clean/INVOICE/product.metadata.json
2025-05-12T14:23:37.224+0530	restoring INVOICE.customer from invoice_backup_clean/INVOICE/customer.bson
2025-05-12T14:23:37.273+0530	finished restoring INVOICE.customer (4 documents, 0 failures)
2025-05-12T14:23:37.361+0530	restoring INVOICE.product from invoice_backup_clean/INVOICE/product.bson
2025-05-12T14:23:37.398+0530	finished restoring INVOICE.product (4 documents, 0 failures)
2025-05-12T14:23:37.457+0530	restoring INVOICE.CUSTOMER from invoice_backup_clean/INVOICE/CUSTOMER.bson
2025-05-12T14:23:37.470+0530	finished restoring INVOICE.CUSTOMER (1 document, 0 failures)
2025-05-12T14:23:37.470+0530	no indexes to restore for collection INVOICE.customer
2025-05-12T14:23:37.470+0530	no indexes to restore for collection INVOICE.product
2025-05-12T14:23:37.470+0530	no indexes to restore for collection INVOICE.CUSTOMER
2025-05-12T14:23:37.470+0530	9 document(s) restored successfully. 0 document(s) failed to restore.


#4. Write a MongoDB query to create an index for the collection 'CUSTOMER' using the field 'customer_name'.


test> use INVOICE
switched to db INVOICE
INVOICE> db.CUSTOMER.createIndex( { customer_name: 1 } )
customer_name_1
//VERIFIED
